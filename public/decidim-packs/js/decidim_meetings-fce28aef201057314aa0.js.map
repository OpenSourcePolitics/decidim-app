{"version":3,"file":"js/decidim_meetings-fce28aef201057314aa0.js","mappings":"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","sources":["webpack://app//Users/armandfardeau/.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-meetings/app/packs/images|sync|/^\\.\\/.*$/","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/publicPath","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-core/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-core/app/packs/src/decidim/geocoding/attach_input.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-meetings/app/packs/src/decidim/meetings/meetings_form.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-meetings/app/packs/src/decidim/meetings/poll.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-meetings/app/packs/src/decidim/meetings/meetings_polls.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/option_attached_inputs.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/autosortable_checkboxes.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/display_conditions.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/max_choices_alert.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/forms.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-meetings/app/packs/entrypoints/decidim_meetings.js"],"sourcesContent":["var map = {\n\t\"./decidim/gamification/badges/decidim_gamification_badges_attended_meetings.svg\": 57197,\n\t\"./decidim/meetings/decidim_meetings.svg\": 55881\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 12581;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/decidim-packs/\";","/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n","/* eslint-disable require-jsdoc */\nimport getCoordinateInputName from \"./coordinate_input\"\n\n/**\n * You can use this method to \"attach\" front-end geocoding to any forms in the\n * front-end which have address fields with geocoding autocompletion\n * functionality already applied to them.\n *\n * To learn more about the front-end geocoding autocompletion, please refer to\n * the maps documentation at: /docs/customization/maps.md.\n *\n * When the geocoding autocompletion finishes, most of the times, its results\n * will also contain the geocoordinate information for the selected address.\n * This method allows you to pass these coordinates (latitude and longitude)\n * to the same front-end form where the geocoding autocompletion address field\n * is located at (which is the $input you pass to this method). The latitude\n * and longitude coordinates will be added or \"attached\" to the form once the\n * user selects one of the suggested addresses.\n *\n * Therefore, if there was the following geocoding autocompletion field at\n * your form:\n *   <input\n *     id=\"record_address\"\n *     type=\"text\"\n *     name=\"record[address]\"\n *     data-decidim-geocoding=\"{&quot;url&quot;:&quot;https://photon.example.org/api/&quot;}\"\n *   />\n *\n * You would then \"attach\" the geocoding result coordinates to the same form\n * where this input is at as follows:\n *   $(document).ready(function() {\n *     window.Decidim.attachGeocoding($(\"#record_address\"));\n *   });\n *\n * Now, after the user selects one of the suggested geocoding autocompletion\n * addresses and the geocoding autocompletion API provides the coordinates in\n * the results, you would have the following fields automatically generated\n * to your form:\n *   <input id=\"record_address\" type=\"text\" name=\"record[address]\" value=\"Selected address, 00210, City\" ... />\n *   <input id=\"record_latitude\" type=\"hidden\" name=\"record[latitude]\" value=\"1.123\" />\n *   <input id=\"record_longitude\" type=\"hidden\" name=\"record[longitude]\" value=\"2.234\" />\n *\n * If you would not do the attachment, these hidden longitude and latitude\n * fields would not be generated and the geocoding would have to happen at the\n * server-side when the form is submitted. The problem with that approach\n * would be that the server-side address geocoding could potentially result in\n * different coordinates than what the user actually selected in the front-end\n * because the autocompletion API can return different coordinates than the\n * geocoding API. Another reason is to avoid unnecessary calls to the\n * geocoding API as the front-end geocoding suggestion already returned the\n * coordinate values we need.\n *\n * @param {jQuery} $input The input jQuery element for the geocoded address\n *   field.\n * @param {Object} options (optional) Extra options if you want to customize\n *   the latitude and longitude element IDs or names from the default.\n * @param {function} callback (optional) Callback to run when updating the coordinates values\n * @returns {void}\n */\n\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName: latitudeName,\n    longitudeName: longitudeName\n  }, options);\n  let geocoded = false;\n\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  }\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates) => {\n    createCoordinateFields();\n\n    $(`#${config.latitudeId}`).val(coordinates[0]).attr(\"value\", coordinates[0]);\n    $(`#${config.longitudeId}`).val(coordinates[1]).attr(\"value\", coordinates[1]);\n  }\n\n  // When the user changes the value of the coordinate field without selecting\n  // any of the geocoding autocomplete results, clear the current latitude and\n  // longitude values to let the backend do the geocoding. Once a geocoding\n  // autocomplete value has been selected, assume the user just wants to\n  // refine the address formatting without changing the location point value.\n  // If they want, they can still modify the point in the next step of the\n  // proposal creation/editing.\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n\n  // When we receive the geocoding event on the field, update the coordinate\n  // values.\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates) => {\n    setCoordinates(coordinates);\n    geocoded = true;\n    callback(coordinates)\n  });\n\n  // Set the initial values if the field defines the coordinates\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","import attachGeocoding from \"src/decidim/geocoding/attach_input\"\n\n$(() => {\n  // Adds the latitude/longitude inputs after the geocoding is done\n  const $meetingAddress = $(\"#meeting_address\");\n  if ($meetingAddress.length > 0) {\n    attachGeocoding($meetingAddress);\n  }\n\n  const $form = $(\".meetings_form\");\n  if ($form.length > 0) {\n    const $meetingTypeOfMeeting = $form.find(\"#meeting_type_of_meeting\");\n    const $meetingOnlineFields = $form.find(\".field[data-meeting-type='online']\");\n    const $meetingInPersonFields = $form.find(\".field[data-meeting-type='in_person']\");\n\n    const toggleDependsOnSelect = ($target, $showDiv, type) => {\n      const value = $target.val();\n      if (value === \"hybrid\") {\n        $showDiv.show();\n      } else {\n        $showDiv.hide();\n        if (value === type) {\n          $showDiv.show();\n        }\n      }\n    };\n\n    $meetingTypeOfMeeting.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingOnlineFields, \"online\");\n      toggleDependsOnSelect($target, $meetingInPersonFields, \"in_person\");\n    });\n\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingOnlineFields, \"online\");\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingInPersonFields, \"in_person\");\n\n\n    const $meetingRegistrationType = $form.find(\"#meeting_registration_type\");\n    const $meetingRegistrationTerms = $form.find(\"#meeting_registration_terms\");\n    const $meetingRegistrationUrl = $form.find(\"#meeting_registration_url\");\n    const $meetingAvailableSlots = $form.find(\"#meeting_available_slots\");\n\n    $meetingRegistrationType.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingAvailableSlots, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationTerms, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationUrl, \"on_different_platform\");\n    });\n\n    toggleDependsOnSelect($meetingRegistrationType, $meetingAvailableSlots, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationTerms, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationUrl, \"on_different_platform\");\n  }\n});\n","/* eslint id-length: [\"error\", { \"exceptions\": [\"$\"] }] */\n\n/**\n * A plain Javascript component that handles questions from polls in meetings:\n *   - fetches them via Ajax\n *   - enables a polling to automatically update them\n *\n * @class\n * @augments Component\n */\n\n// This is necessary for testing purposes\nconst $ = window.$;\n\n// Default question states\nconst OPEN = \"open\";\nconst CLOSED = \"closed\";\n\nexport default class PollComponent {\n  constructor($element, config, $counter = null) {\n    this.$element = $element;\n    this.$counter = $counter;\n    this.questionsUrl = config.questionsUrl;\n    this.pollingInterval = config.pollingInterval || 5000;\n    this.mounted = false;\n    this.questions = {};\n  }\n\n  /**\n   * Returns if the component is mounted or not\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  isMounted() {\n    return this.mounted;\n  }\n\n  /**\n   * Handles the logic for mounting the component\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  mountComponent() {\n    if (this.$element.length > 0 && !this.mounted) {\n      this.mounted = true;\n      this._fetchQuestions();\n    }\n  }\n\n  unmountComponent() {\n    if (this.mounted) {\n      this.mounted = false;\n      this._stopPolling();\n      this.$element.html(\"\");\n    }\n  }\n\n  /**\n   * Performs the ajax call that updates the list of questions\n   * Before, stores the current questions states to apply them after the ajax call has\n   * been completed\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _fetchQuestions() {\n    // Store current questions state (open / closed) before overwritting them with the Ajax call\n    // response.\n    this._storeQuestionState(this.$element);\n\n    $.ajax({\n      url: this.questionsUrl,\n      method: \"GET\",\n      contentType: \"application/javascript\"\n    }).done(() => {\n      this._updateCounter();\n      this._setQuestionsState(this.$element);\n      this._pollQuestions();\n    });\n  }\n\n  /**\n   * Iterates over all existing questions and stores the state in an internal attribute.\n   * @private\n   * @param {jQuery} $parent - The HTML content for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _storeQuestionState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      const $el = $(el);\n      const questionId = $el.data(\"question\");\n      if ($el[0].open === true) {\n        this.questions[questionId] = OPEN;\n      } else {\n        this.questions[questionId] = CLOSED;\n      }\n    });\n  }\n\n  /**\n   * Initializes the states of all the questions.\n   * @private\n   * @param {jQuery} $parent - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionsState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      this._setQuestionState($(el));\n    });\n  }\n\n  /**\n   * Initializes the state of a single question with two types of modifications:\n   *   - sets the is-new class if the question is new (doesn't exist in the internal list)\n   *   - sets the state to open if it was open in the internal list\n   * @private\n   * @param {jQuery} $el - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionState($el) {\n    const questionId = $el.data(\"question\");\n    // Current question state\n    const state = this.questions[questionId];\n    // New questions have a special class\n    if (!state) {\n      $el.addClass(\"is-new\");\n    } else if (state === OPEN) {\n      $el.prop(OPEN, true);\n    }\n  }\n\n  /**\n   * Sets a timeout to poll new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _pollQuestions() {\n    this._stopPolling();\n\n    this.pollTimeout = setTimeout(() => {\n      this._fetchQuestions();\n    }, this.pollingInterval);\n  }\n\n  /**\n   * Stops polling for new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _stopPolling() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  /**\n   * Updates the counter with the number of questions returned in the Ajax call\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _updateCounter() {\n    if (this.$counter) {\n      const questionsCount = this.$element.find(\"details\").length;\n      this.$counter.html(`(${questionsCount})`);\n    }\n  }\n}\n","import MeetingsPollComponent from \"src/decidim/meetings/poll.component\"\nconst OPEN_CLASS = \"is-open\";\n\n$(() => {\n  // Mount polls component for users\n  const $container = $(\"[data-decidim-meetings-poll]\");\n  const $counter = $(\"#visible-questions-count\");\n  const poll = new MeetingsPollComponent($container, $container.data(\"decidim-meetings-poll\"), $counter);\n\n  $(\".meeting-polls__action-list\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    if (poll.isMounted()) {\n      $(event.target).removeClass(OPEN_CLASS);\n      $container.removeClass(OPEN_CLASS);\n      poll.unmountComponent();\n    } else {\n      $(event.target).addClass(OPEN_CLASS);\n      $container.addClass(OPEN_CLASS);\n      poll.mountComponent();\n    }\n  });\n\n  // Mount polls component for admins\n  const $adminContainer = $(\"[data-decidim-admin-meetings-poll]\");\n  const adminPoll = new MeetingsPollComponent($adminContainer, $adminContainer.data(\"decidim-admin-meetings-poll\"));\n\n  $(\".meeting-polls__action-administrate\").on(\"click\", (event) => {\n    event.preventDefault();\n\n    if (adminPoll.isMounted()) {\n      $(event.target).removeClass(OPEN_CLASS);\n      $adminContainer.removeClass(OPEN_CLASS);\n      adminPoll.unmountComponent();\n    } else {\n      $(event.target).addClass(OPEN_CLASS);\n      $adminContainer.addClass(OPEN_CLASS);\n      adminPoll.mountComponent();\n    }\n  });\n});\n","/* eslint-disable require-jsdoc */\n\nclass OptionAttachedInputsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    this.controllerSelector.each((idx, el) => {\n      const $field = $(el);\n      const enabled = $field.is(\":checked\");\n\n      $field.parents(\"div.collection-input\").find(this.dependentInputSelector).prop(\"disabled\", !enabled);\n    });\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n/* eslint-disable no-ternary */\n\nclass AutosortableCheckboxesComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this._bindEvent();\n    this._order();\n    this._normalize();\n  }\n\n  // Order by position\n  _order() {\n    const max = $(this.wrapperField).find(\".collection-input\").length;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = $positionField.val()\n        ? parseInt($positionField.val(), 10)\n        : max;\n\n      let $next = $(el).next();\n      while ($next.length > 0) {\n        const $nextPositionField = $next.find(\"input[name$=\\\\[position\\\\]]\");\n        const nextPosition = $nextPositionField.val()\n          ? parseInt($nextPositionField.val(), 10)\n          : max;\n\n        if (position > nextPosition) {\n          $next.insertBefore($(el));\n        }\n        $next = $next.next();\n      }\n    });\n  }\n\n  _findLastPosition() {\n    let lastPosition = 0;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = parseInt($positionField.val(), 10);\n      if (position > lastPosition) {\n        lastPosition = position;\n      }\n    });\n    return lastPosition;\n  }\n\n  _normalize() {\n    $(this.wrapperField).find(\".collection-input .position\").each((idx, el) => {\n      const $positionField = $(el).parent().find(\"input[name$=\\\\[position\\\\]]\");\n      if ($positionField.val()) {\n        $positionField.val(idx);\n        $positionField.prop(\"disabled\", false);\n        $(el).html(`${idx + 1}. `);\n      }\n    });\n  }\n\n  _bindEvent() {\n    $(this.wrapperField).find(\"input[type=checkbox]\").on(\"change\", (el) => {\n      const $parentLabel = $(el.target).parents(\"label\");\n      const $positionSelector = $parentLabel.find(\".position\");\n      const $positionField = $parentLabel.find(\"input[name$=\\\\[position\\\\]]\");\n      const lastPosition = this._findLastPosition();\n\n      if (el.target.checked) {\n        $positionField.val(lastPosition + 1);\n        $positionField.prop(\"disabled\", false);\n        $positionSelector.html(lastPosition + 1);\n      } else {\n        $positionField.val(\"\");\n        $positionField.prop(\"disabled\", true);\n        $positionSelector.html(\"\");\n      }\n      this._order();\n      this._normalize();\n    });\n  }\n}\n\nexport default function createAutosortableCheckboxes(options) {\n  return new AutosortableCheckboxesComponent(options);\n}\n","/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\nclass DisplayCondition {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    this.checkCondition();\n    this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n  }\n\n  getInputValue() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput.val();\n    }\n\n    let multipleInput = [];\n\n    $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each((idx, el) => {\n      const $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n      const checked = $input.is(\":checked\");\n\n      if (checked) {\n        const text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n        const value = $input.val();\n        const id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n\n        multipleInput.push({ id, value, text });\n      }\n    });\n\n    return multipleInput;\n  }\n\n  getInputsToListen() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput;\n    }\n\n    return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n  }\n\n  checkAnsweredCondition(value) {\n    if (typeof (value) !== \"object\") {\n      return Boolean(value);\n    }\n\n    return Boolean(value.some((it) => it.value));\n  }\n\n  checkNotAnsweredCondition(value) {\n    return !this.checkAnsweredCondition(value);\n  }\n\n  checkEqualCondition(value) {\n    if (value.length) {\n      return value.some((it) => it.id === this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkNotEqualCondition(value) {\n    if (value.length) {\n      return value.every((it) => it.id !== this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkMatchCondition(value) {\n    let regexp = new RegExp(this.value, \"i\");\n\n    if (typeof (value) !== \"object\") {\n      return Boolean(value.match(regexp));\n    }\n\n    return value.some(function (it) {\n      return it.text\n        ? it.text.match(regexp)\n        : it.value.match(regexp)\n    });\n  }\n\n  checkCondition() {\n    const value = this.getInputValue();\n    let fulfilled = false;\n\n    switch (this.type) {\n    case \"answered\":\n      fulfilled = this.checkAnsweredCondition(value);\n      break;\n    case \"not_answered\":\n      fulfilled = this.checkNotAnsweredCondition(value);\n      break;\n    case \"equal\":\n      fulfilled = this.checkEqualCondition(value);\n      break;\n    case \"not_equal\":\n      fulfilled = this.checkNotEqualCondition(value);\n      break;\n    case \"match\":\n      fulfilled = this.checkMatchCondition(value);\n      break;\n    default:\n      fulfilled = false;\n      break;\n    }\n\n    this.onFulfilled(fulfilled);\n  }\n}\n\nclass DisplayConditionsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  initializeConditions() {\n    const $conditionElements = this.wrapperField.find(\".display-condition\");\n\n    $conditionElements.each((idx, el) => {\n      const $condition = $(el);\n      const id = $condition.data(\"id\");\n      this.conditions[id] = {};\n\n      this.conditions[id] = new DisplayCondition({\n        wrapperField: this.wrapperField,\n        type: $condition.data(\"type\"),\n        conditionQuestion: $condition.data(\"condition\"),\n        answerOption: $condition.data(\"option\"),\n        mandatory: $condition.data(\"mandatory\"),\n        value: $condition.data(\"value\"),\n        onFulfilled: (fulfilled) => {\n          this.onFulfilled(id, fulfilled);\n        }\n      });\n    });\n  }\n\n  mustShow() {\n    const conditions = Object.values(this.conditions);\n    const mandatoryConditions = conditions.filter((condition) => condition.mandatory);\n    const nonMandatoryConditions = conditions.filter((condition) => !condition.mandatory);\n\n    if (mandatoryConditions.length) {\n      return mandatoryConditions.every((condition) => condition.fulfilled);\n    }\n\n    return nonMandatoryConditions.some((condition) => condition.fulfilled);\n\n  }\n\n  onFulfilled(id, fulfilled) {\n    this.conditions[id].fulfilled = fulfilled;\n\n    if (this.mustShow()) {\n      this.showQuestion();\n    }\n    else {\n      this.hideQuestion();\n    }\n  }\n\n  showQuestion() {\n    this.wrapperField.fadeIn();\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n    this.showCount++;\n  }\n\n  hideQuestion() {\n    if (this.showCount) {\n      this.wrapperField.fadeOut();\n    }\n    else {\n      this.wrapperField.hide();\n    }\n\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n  }\n}\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nclass MaxChoicesAlertComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.alertElement = options.alertElement;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.controllerCollectionSelector = options.controllerCollectionSelector;\n    this.maxChoices = options.maxChoices;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const rows = this.wrapperField.find(this.controllerCollectionSelector);\n\n    let alert = false;\n\n    rows.each((rowIdx, row) => {\n      const checked = $(row).find(this.controllerFieldSelector).filter((checkboxIdx, checkbox) => $(checkbox).is(\":checked\"));\n\n      alert = alert || checked.length > this.maxChoices;\n    });\n\n    if (alert) {\n      this.alertElement.show();\n    }\n    else {\n      this.alertElement.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createMaxChoicesAlertComponent(options) {\n  return new MaxChoicesAlertComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nimport createOptionAttachedInputs from \"src/decidim/forms/option_attached_inputs.component\"\nimport createAutosortableCheckboxes from \"src/decidim/forms/autosortable_checkboxes.component\"\nimport createDisplayConditions from \"src/decidim/forms/display_conditions.component\"\nimport createMaxChoicesAlertComponent from \"src/decidim/forms/max_choices_alert.component\"\n\n$(() => {\n  $(\".radio-button-collection, .check-box-collection\").each((idx, el) => {\n    createOptionAttachedInputs({\n      wrapperField: $(el),\n      controllerFieldSelector: \"input[type=radio], input[type=checkbox]\",\n      dependentInputSelector: \"input[type=text], input[type=hidden]\"\n    });\n  });\n\n  $.unique($(\".check-box-collection\").parents(\".answer\")).each((idx, el) => {\n    const maxChoices = $(el).data(\"max-choices\");\n    if (maxChoices) {\n      createMaxChoicesAlertComponent({\n        wrapperField: $(el),\n        controllerFieldSelector: \"input[type=checkbox]\",\n        controllerCollectionSelector: \".check-box-collection\",\n        alertElement: $(el).find(\".max-choices-alert\"),\n        maxChoices: maxChoices\n      });\n    }\n  });\n\n  $(\".sortable-check-box-collection\").each((idx, el) => {\n    createAutosortableCheckboxes({\n      wrapperField: $(el)\n    })\n  });\n\n  $(\".answer-questionnaire .question[data-conditioned='true']\").each((idx, el) => {\n    createDisplayConditions({\n      wrapperField: $(el)\n    });\n  });\n\n  const $form = $(\"form.answer-questionnaire\");\n  if ($form.length > 0) {\n    $form.find(\"input, textarea, select\").on(\"change\", () => {\n      $form.data(\"changed\", true);\n    });\n\n    const safePath = $form.data(\"safe-path\").split(\"?\")[0];\n    $(document).on(\"click\", \"a\", (event) => {\n      window.exitUrl = event.currentTarget.href;\n    });\n    $(document).on(\"submit\", \"form\", (event) => {\n      window.exitUrl = event.currentTarget.action;\n    });\n\n    window.addEventListener(\"beforeunload\", (event) => {\n      const exitUrl = window.exitUrl;\n      const hasChanged = $form.data(\"changed\");\n      window.exitUrl = null;\n\n      if (!hasChanged || (exitUrl && exitUrl.includes(safePath))) {\n        return;\n      }\n\n      event.returnValue = true;\n    });\n  }\n})\n","import \"src/decidim/meetings/meetings_form\"\nimport \"src/decidim/meetings/meetings_polls\"\nimport \"src/decidim/forms/forms\"\n\n// Images\nrequire.context(\"../images\", true)\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","obj","prop","prototype","hasOwnProperty","call","p","getCoordinateInputName","coordinate","key","options","inputName","$input","subNameMatch","attachGeocoding","attachOptions","$","inputIdParts","idPrefix","latitudeName","longitudeName","config","latitudeId","longitudeId","geocoded","setCoordinates","coordinates","$latitude","$longitude","createCoordinateFields","callback","Array","$meetingAddress","$form","$meetingTypeOfMeeting","$meetingOnlineFields","$meetingInPersonFields","toggleDependsOnSelect","$target","value","$showDiv","ev","$meetingRegistrationType","$meetingRegistrationTerms","$meetingRegistrationUrl","$meetingAvailableSlots","window","OPEN","PollComponent","$counter","this","$element","questionsUrl","pollingInterval","mounted","questions","length","_fetchQuestions","_stopPolling","html","_storeQuestionState","url","method","contentType","$el","questionId","state","pollTimeout","setTimeout","clearTimeout","questionsCount","find","OPEN_CLASS","$container","poll","event","$adminContainer","adminPoll","OptionAttachedInputsComponent","wrapperField","controllerFieldSelector","dependentInputSelector","controllerSelector","_bindEvent","_run","each","$field","enabled","on","AutosortableCheckboxesComponent","_order","_normalize","max","$positionField","position","parseInt","$next","$nextPositionField","lastPosition","idx","$parentLabel","el","$positionSelector","DisplayCondition","type","conditionQuestion","answerOption","mandatory","onFulfilled","bindEvent","checkCondition","getInputsToListen","bind","$conditionWrapperField","$textInput","multipleInput","text","Boolean","it","checkAnsweredCondition","regexp","RegExp","fulfilled","checkNotAnsweredCondition","checkEqualCondition","checkNotEqualCondition","checkMatchCondition","DisplayConditionsComponent","conditions","showCount","initializeConditions","$conditionElements","$condition","mandatoryConditions","condition","nonMandatoryConditions","showQuestion","hideQuestion","fadeIn","fadeOut","hide","MaxChoicesAlertComponent","alertElement","controllerCollectionSelector","maxChoices","rows","alert","checked","show","safePath","exitUrl","hasChanged","require"],"sourceRoot":""}