{"version":3,"file":"js/decidim_forms_admin-ff32948aa7a7bb58eb77.js","mappings":"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","sources":["webpack://app/webpack/runtime/chunk loaded","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/auto_buttons_by_min_items.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/auto_select_options_by_total_items.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/auto_select_options_from_url.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/live_text_update.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-admin/app/packs/src/decidim/admin/auto_buttons_by_position.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-admin/app/packs/src/decidim/admin/auto_label_by_position.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-admin/app/packs/src/decidim/admin/sort_list.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-admin/app/packs/src/decidim/admin/dynamic_fields.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-admin/app/packs/src/decidim/admin/field_dependent_inputs.component.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/entrypoints/decidim_forms_admin.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/forms.js","webpack://app/../../../.asdf/installs/ruby/2.7.1/lib/ruby/gems/2.7.0/bundler/gems/decidim-4f7e0ffd5b1e/decidim-forms/app/packs/src/decidim/forms/admin/collapsible_questions.js","webpack://app/webpack/bootstrap","webpack://app/webpack/runtime/define property getters","webpack://app/webpack/runtime/hasOwnProperty shorthand","webpack://app/webpack/runtime/jsonp chunk loading","webpack://app/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","export default class AutoButtonsByMinItemsComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.minItems = options.minItems;\n    this.hideOnMinItemsOrLessSelector = options.hideOnMinItemsOrLessSelector;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const $items = $list.find(this.hideOnMinItemsOrLessSelector);\n\n    if ($list.length <= this.minItems) {\n      $items.hide();\n    } else {\n      $items.show();\n    }\n  }\n}\n","export default class AutoSelectOptionsByTotalItemsComponent {\n  constructor(options = {}) {\n    this.wrapperSelector = options.wrapperSelector;\n    this.selectSelector = options.selectSelector;\n    this.listSelector = options.listSelector;\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const $selectField = $list.parents(this.wrapperSelector).find(this.selectSelector);\n\n    $selectField.find(\"option\").slice(1).remove();\n\n    for (let idx = 2; idx <= $list.length; idx += 1) {\n      $(`<option value=\"${idx}\">${idx}</option>`).appendTo($selectField);\n    }\n  }\n}\n","export default class AutoSelectOptionsFromUrl {\n  constructor(options = {}) {\n    this.$source = options.source;\n    this.$select = options.select;\n    this.sourceToParams = options.sourceToParams;\n    this.run();\n  }\n\n  run() {\n    this.$source.on(\"change\", this._onSourceChange.bind(this));\n    this._onSourceChange();\n  }\n\n  _onSourceChange() {\n    const select = this.$select;\n    const params = this.sourceToParams(this.$source);\n    const url = this.$source.data(\"url\");\n\n    $.getJSON(url, params, function (data) {\n      select.find(\"option:not([value=''])\").remove();\n      const selectedValue = select.data(\"selected\");\n\n      data.forEach((option) => {\n        let optionElement = $(`<option value=\"${option.id}\">${option.body}</option>`).appendTo(select);\n        if (option.id === selectedValue) {\n          optionElement.attr(\"selected\", true);\n        }\n      });\n\n      if (selectedValue) {\n        select.val(selectedValue);\n      }\n    });\n  }\n}\n","/* eslint-disable require-jsdoc */\n\n/**\n * This component allows for an element's text value to be updated with the value\n * of an input whenever this input's value is changed.\n *\n * @param {object} options\n *\n * Available options:\n * {string} `inputSelector`:  The query selector to locate the input element\n * {string} `targetSelector`: The query selector to locate the target element\n * {number} `maxLength`: The maximum characters from the input value to be displayed in the target\n * {string} `omission`: The string used to shorten the value to the given maxLength (e.g. \"...\")\n * {string} `placeholder`: The string to be displayed in the target element when the input has no value\n */\nclass LiveTextUpdateComponent {\n  constructor(options = {}) {\n    this.inputSelector = options.inputSelector;\n    this.targetSelector = options.targetSelector;\n    this.maxLength = options.maxLength;\n    this.omission = options.omission;\n    this.placeholder = options.placeholder;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $input = $(this.inputSelector);\n    const $target = $(this.targetSelector);\n\n    let text = $input.val() || this.placeholder;\n\n    // truncate string\n    if (text.length > this.maxLength) {\n      text = text.substring(0, this.maxLength - this.omission.length) + this.omission;\n    }\n\n    $target.text(text);\n  }\n\n  _bindEvent() {\n    const $input = $(this.inputSelector);\n    $input.on(\"change\", this._run.bind(this));\n  }\n}\n\nexport default function createLiveTextUpdateComponent(options) {\n  return new LiveTextUpdateComponent(options);\n}\n","export default class AutoButtonsByPositionComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.hideOnFirstSelector = options.hideOnFirstSelector;\n    this.hideOnLastSelector = options.hideOnLastSelector;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n    const hideOnFirst = this.hideOnFirstSelector;\n    const hideOnLast = this.hideOnLastSelector;\n\n    if ($list.length === 1) {\n      const $item = $list.first();\n\n      $item.find(hideOnFirst).hide();\n      $item.find(hideOnLast).hide();\n    } else {\n      $list.each((idx, el) => {\n        if (el.id === $list.first().attr(\"id\")) {\n          $(el).find(hideOnFirst).hide();\n          $(el).find(hideOnLast).show();\n        }\n        else if (el.id === $list.last().attr(\"id\")) {\n          $(el).find(hideOnLast).hide();\n          $(el).find(hideOnFirst).show();\n        }\n        else {\n          $(el).find(hideOnLast).show();\n          $(el).find(hideOnFirst).show();\n        }\n      });\n    }\n  }\n}\n","export default class AutoLabelByPositionComponent {\n  constructor(options = {}) {\n    this.listSelector = options.listSelector;\n    this.labelSelector = options.labelSelector;\n    this.onPositionComputed = options.onPositionComputed;\n\n    this.run();\n  }\n\n  run() {\n    const $list = $(this.listSelector);\n\n    $list.each((idx, el) => {\n      const $label = $(el).find(this.labelSelector);\n      const labelContent = $label.html();\n\n      if (labelContent.match(/#(\\d+)/)) {\n        $label.html(labelContent.replace(/#(\\d+)/, `#${idx + 1}`));\n      } else {\n        $label.html(`${labelContent} #${idx + 1}`);\n      }\n\n      if (this.onPositionComputed) {\n        this.onPositionComputed(el, idx);\n      }\n    });\n  }\n}\n","/* eslint-disable require-jsdoc */\nimport sortable from \"html5sortable/dist/html5sortable.es\"\n\nclass SortListComponent {\n\n  /**\n   * Creates a sortable list using hmtl5sortable function.\n   *\n   * @param {String} sortListSelector The list selector that has to be sortable.\n   * @param {Object} options An object containing the same options as html5sortable. It also includes\n   *                an extra option `onSortUpdate`, a callback which returns the children collection\n   *                whenever the list order has been changed.\n   *\n   * @returns {void} Nothing.\n   */\n  constructor(sortListSelector, options) {\n    if ($(sortListSelector).length > 0) {\n      sortable(sortListSelector, options)[0].addEventListener(\"sortupdate\", (event) => {\n        const $children = $(event.target).children();\n\n        if (options.onSortUpdate) {\n          options.onSortUpdate($children);\n        }\n      });\n    }\n  }\n}\n\nexport default function createSortList(sortListSelector, options) {\n  return new SortListComponent(sortListSelector, options);\n}\n","/* eslint-disable require-jsdoc */\nclass DynamicFieldsComponent {\n  constructor(options = {}) {\n    this.wrapperSelector = options.wrapperSelector;\n    this.containerSelector = options.containerSelector;\n    this.fieldSelector = options.fieldSelector;\n    this.addFieldButtonSelector = options.addFieldButtonSelector;\n    this.addSeparatorButtonSelector = options.addSeparatorButtonSelector;\n    this.fieldTemplateSelector = options.fieldTemplateSelector;\n    this.separatorTemplateSelector = options.separatorTemplateSelector;\n    this.removeFieldButtonSelector = options.removeFieldButtonSelector;\n    this.moveUpFieldButtonSelector = options.moveUpFieldButtonSelector;\n    this.moveDownFieldButtonSelector = options.moveDownFieldButtonSelector;\n    this.onAddField = options.onAddField;\n    this.onRemoveField = options.onRemoveField;\n    this.onMoveUpField = options.onMoveUpField;\n    this.onMoveDownField = options.onMoveDownField;\n    this.placeholderId = options.placeholderId;\n    this.elementCounter = 0;\n    this._enableInterpolation();\n    this._activateFields();\n    this._bindEvents();\n  }\n\n  _enableInterpolation() {\n    $.fn.replaceAttribute = function(attribute, placeholder, value) {\n      $(this).find(`[${attribute}*=${placeholder}]`).addBack(`[${attribute}*=${placeholder}]`).each((index, element) => {\n        $(element).attr(attribute, $(element).attr(attribute).replace(placeholder, value));\n      });\n\n      return this;\n    }\n\n    $.fn.template = function(placeholder, value) {\n      // See the comment below in the `_addField()` method regarding the\n      // `<template>` tag support in IE11.\n      const $subtemplate = $(this).find(\"template, .decidim-template\");\n\n      if ($subtemplate.length > 0) {\n        $subtemplate.html((index, oldHtml) => $(oldHtml).template(placeholder, value)[0].outerHTML);\n      }\n\n      // Handle those subtemplates that are mapped with the `data-template`\n      // attribute. This is also because of the IE11 support.\n      const $subtemplateParents = $(this).find(\"[data-template]\");\n\n      if ($subtemplateParents.length > 0) {\n        $subtemplateParents.each((_i, elem) => {\n          const $self = $(elem);\n          const $tpl = $($self.data(\"template\"));\n\n          // Duplicate the sub-template with a unique ID as there may be\n          // multiple parent templates referring to the same sub-template.\n          const $subtpl = $($tpl[0].outerHTML);\n          const subtemplateId = `${$tpl.attr(\"id\")}-${value}`;\n          const subtemplateSelector = `#${subtemplateId}`;\n          $subtpl.attr(\"id\", subtemplateId);\n          $self.attr(\"data-template\", subtemplateSelector).data(\"template\", subtemplateSelector);\n          $tpl.after($subtpl);\n\n          $subtpl.html((index, oldHtml) => $(oldHtml).template(placeholder, value)[0].outerHTML);\n        });\n      }\n\n      $(this).replaceAttribute(\"id\", placeholder, value);\n      $(this).replaceAttribute(\"name\", placeholder, value);\n      $(this).replaceAttribute(\"data-tabs-content\", placeholder, value);\n      $(this).replaceAttribute(\"for\", placeholder, value);\n      $(this).replaceAttribute(\"tabs_id\", placeholder, value);\n      $(this).replaceAttribute(\"href\", placeholder, value);\n\n      return this;\n    }\n  }\n\n  _bindEvents() {\n    $(this.wrapperSelector).on(\"click\", this.addFieldButtonSelector, (event) =>\n      this._bindSafeEvent(event, () => this._addField(this.fieldTemplateSelector))\n    );\n\n    if (this.addSeparatorButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.addSeparatorButtonSelector, (event) =>\n        this._bindSafeEvent(event, () => this._addField(this.separatorTemplateSelector))\n      );\n    }\n\n    $(this.wrapperSelector).on(\"click\", this.removeFieldButtonSelector, (event) =>\n      this._bindSafeEvent(event, (target) => this._removeField(target))\n    );\n\n    if (this.moveUpFieldButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.moveUpFieldButtonSelector, (event) =>\n        this._bindSafeEvent(event, (target) => this._moveUpField(target))\n      );\n    }\n\n    if (this.moveDownFieldButtonSelector) {\n      $(this.wrapperSelector).on(\"click\", this.moveDownFieldButtonSelector, (event) =>\n        this._bindSafeEvent(event, (target) => this._moveDownField(target))\n      );\n    }\n  }\n\n  _bindSafeEvent(event, cb) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      return cb(event.target);\n    } catch (error) {\n      console.error(error); // eslint-disable-line no-console\n      return error;\n    }\n  }\n\n  // Adds a field.\n  //\n  // template - A String matching the type of the template. Expected to be\n  //  either \".decidim-question-template\" or \".decidim-separator-template\".\n  _addField(templateClass = \".decidim-template\") {\n    const $wrapper = $(this.wrapperSelector);\n    const $container = $wrapper.find(this.containerSelector);\n\n    // Allow defining the template using a `data-template` attribute on the\n    // wrapper element. This is to allow child templates which would otherwise\n    // be impossible using `<script type=\"text/template\">`. See the comment\n    // below regarding the `<template>` tag and IE11.\n    const templateSelector = $wrapper.data(\"template\");\n    let $template = null;\n    if (templateSelector) {\n      $template = $(templateSelector);\n    }\n    if ($template === null || $template.length < 1) {\n      // To preserve IE11 backwards compatibility, the views are using\n      // `<script type=\"text/template\">` with a given `class` instead of\n      // `<template>`. The `<template> tags are parsed in IE11 along with the\n      // DOM which may cause the form elements inside them to break the forms\n      // as they are submitted with them.\n      $template = $wrapper.children(`template, ${templateClass}`);\n    }\n\n    const $newField = $($template.html()).template(this.placeholderId, this._getUID());\n\n    $newField.find(\"ul.tabs\").attr(\"data-tabs\", true);\n\n    const $lastQuestion = $container.find(this.fieldSelector).last()\n    if ($lastQuestion.length > 0) {\n      $lastQuestion.after($newField);\n    } else {\n      $newField.appendTo($container);\n    }\n\n    $newField.foundation();\n\n    if (this.onAddField) {\n      this.onAddField($newField);\n    }\n  }\n\n  _removeField(target) {\n    const $target = $(target);\n    const $removedField = $target.parents(this.fieldSelector);\n    const idInput = $removedField.find(\"input\").filter((idx, input) => input.name.match(/id/));\n\n    if (idInput.length > 0) {\n      const deletedInput = $removedField.find(\"input\").filter((idx, input) => input.name.match(/delete/));\n\n      if (deletedInput.length > 0) {\n        $(deletedInput[0]).val(true);\n      }\n\n      $removedField.addClass(\"hidden\");\n      $removedField.hide();\n    } else {\n      $removedField.remove();\n    }\n\n    if (this.onRemoveField) {\n      this.onRemoveField($removedField);\n    }\n  }\n\n  _moveUpField(target) {\n    const $target = $(target);\n    const $movedUpField = $target.parents(this.fieldSelector);\n\n    $movedUpField.prev().before($movedUpField);\n\n    if (this.onMoveUpField) {\n      this.onMoveUpField($movedUpField);\n    }\n  }\n\n  _moveDownField(target) {\n    const $target = $(target);\n    const $movedDownField = $target.parents(this.fieldSelector);\n\n    $movedDownField.next().after($movedDownField);\n\n    if (this.onMoveDownField) {\n      this.onMoveDownField($movedDownField);\n    }\n  }\n\n  _activateFields() {\n    // Move the `<script type=\"text/template\">` elements to the bottom of the\n    // list container so that they will not cause the question moving\n    // functionality to break since it assumes that all children elements are\n    // the dynamic field list child items.\n    const $wrapper = $(this.wrapperSelector);\n    const $container = $wrapper.find(this.containerSelector);\n    $container.append($container.find(\"script\"));\n\n    $(this.fieldSelector).each((idx, el) => {\n      $(el).template(this.placeholderId, this._getUID());\n\n      $(el).find(\"ul.tabs\").attr(\"data-tabs\", true);\n    })\n  }\n\n  _getUID() {\n    this.elementCounter += 1;\n\n    return (new Date().getTime()) + this.elementCounter;\n  }\n}\n\nexport default function createDynamicFields(options) {\n  return new DynamicFieldsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\nclass FieldDependentInputsComponent {\n  constructor(options = {}) {\n    this.controllerField = options.controllerField;\n    this.wrapperSelector = options.wrapperSelector;\n    this.dependentFieldsSelector = options.dependentFieldsSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.enablingCondition = options.enablingCondition;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $controllerField = this.controllerField;\n    const $dependentFields = $controllerField.parents(this.wrapperSelector).find(this.dependentFieldsSelector);\n    const $dependentInputs = $dependentFields.find(this.dependentInputSelector);\n\n    if (this.enablingCondition($controllerField)) {\n      $dependentInputs.prop(\"disabled\", false);\n      $dependentFields.show();\n    } else {\n      $dependentInputs.prop(\"disabled\", true);\n      $dependentFields.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerField.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createFieldDependentInputs(options) {\n  return new FieldDependentInputsComponent(options);\n}\n\n","import \"src/decidim/forms/admin/collapsible_questions\"\n\nimport createEditableForm from \"../src/decidim/forms/admin/forms\"\nwindow.Decidim.createEditableForm = createEditableForm\n","/* eslint-disable max-lines */\n/* eslint-disable require-jsdoc */\n\nimport AutoButtonsByMinItemsComponent from \"src/decidim/forms/admin/auto_buttons_by_min_items.component\"\nimport AutoSelectOptionsByTotalItemsComponent from \"src/decidim/forms/admin/auto_select_options_by_total_items.component\"\nimport AutoSelectOptionsFromUrl from \"src/decidim/forms/admin/auto_select_options_from_url.component\"\nimport createLiveTextUpdateComponent from \"src/decidim/forms/admin/live_text_update.component\"\nimport AutoButtonsByPositionComponent from \"src/decidim/admin/auto_buttons_by_position.component\"\nimport AutoLabelByPositionComponent from \"src/decidim/admin/auto_label_by_position.component\"\nimport createSortList from \"src/decidim/admin/sort_list.component\"\nimport createDynamicFields from \"src/decidim/admin/dynamic_fields.component\"\nimport createFieldDependentInputs from \"src/decidim/admin/field_dependent_inputs.component\"\nimport createQuillEditor from \"src/decidim/editor\"\n\nexport default function createEditableForm() {\n  const wrapperSelector = \".questionnaire-questions\";\n  const fieldSelector = \".questionnaire-question\";\n  const questionTypeSelector = \"select[name$=\\\\[question_type\\\\]]\";\n  const answerOptionFieldSelector = \".questionnaire-question-answer-option\";\n  const answerOptionsWrapperSelector = \".questionnaire-question-answer-options\";\n  const answerOptionRemoveFieldButtonSelector = \".remove-answer-option\";\n  const matrixRowFieldSelector = \".questionnaire-question-matrix-row\";\n  const matrixRowsWrapperSelector = \".questionnaire-question-matrix-rows\";\n  const matrixRowRemoveFieldButtonSelector = \".remove-matrix-row\";\n  const addMatrixRowButtonSelector = \".add-matrix-row\";\n  const maxChoicesWrapperSelector = \".questionnaire-question-max-choices\";\n\n  const displayConditionFieldSelector = \".questionnaire-question-display-condition\";\n  const displayConditionsWrapperSelector = \".questionnaire-question-display-conditions\";\n  const displayConditionRemoveFieldButtonSelector = \".remove-display-condition\";\n\n  const displayConditionQuestionSelector = \"select[name$=\\\\[decidim_condition_question_id\\\\]]\";\n  const displayConditionAnswerOptionSelector = \"select[name$=\\\\[decidim_answer_option_id\\\\]]\";\n  const displayConditionTypeSelector = \"select[name$=\\\\[condition_type\\\\]]\";\n  const deletedInputSelector = \"input[name$=\\\\[deleted\\\\]]\";\n\n  const displayConditionValueWrapperSelector = \".questionnaire-question-display-condition-value\";\n  const displayconditionAnswerOptionWrapperSelector = \".questionnaire-question-display-condition-answer-option\";\n\n  const addDisplayConditionButtonSelector = \".add-display-condition\";\n\n  const removeDisplayConditionsForFirstQuestion = () => {\n    $(fieldSelector).each((idx, el) => {\n      const $question = $(el);\n      if (idx) {\n        $question.find(displayConditionsWrapperSelector).find(deletedInputSelector).val(\"false\");\n        $question.find(displayConditionsWrapperSelector).show();\n      }\n      else {\n        $question.find(displayConditionsWrapperSelector).find(deletedInputSelector).val(\"true\");\n        $question.find(displayConditionsWrapperSelector).hide();\n      }\n    });\n  };\n\n  const autoButtonsByPosition = new AutoButtonsByPositionComponent({\n    listSelector: \".questionnaire-question:not(.hidden)\",\n    hideOnFirstSelector: \".move-up-question\",\n    hideOnLastSelector: \".move-down-question\"\n  });\n\n  const autoLabelByPosition = new AutoLabelByPositionComponent({\n    listSelector: \".questionnaire-question:not(.hidden)\",\n    labelSelector: \".card-title span:first\",\n    onPositionComputed: (el, idx) => {\n      $(el).find(\"input[name$=\\\\[position\\\\]]:not([name*=\\\\[matrix_rows\\\\]])\").val(idx);\n\n      autoButtonsByPosition.run();\n\n      removeDisplayConditionsForFirstQuestion();\n    }\n  });\n\n  const MULTIPLE_CHOICE_VALUES = [\"single_option\", \"multiple_option\", \"sorting\", \"matrix_single\", \"matrix_multiple\"];\n  const MATRIX_VALUES = [\"matrix_single\", \"matrix_multiple\"];\n\n  const createAutoMaxChoicesByNumberOfAnswerOptions = (fieldId) => {\n    return new AutoSelectOptionsByTotalItemsComponent({\n      wrapperSelector: fieldSelector,\n      selectSelector: `${maxChoicesWrapperSelector} select`,\n      listSelector: `#${fieldId} ${answerOptionsWrapperSelector} .questionnaire-question-answer-option:not(.hidden)`\n    })\n  };\n\n  const createAutoButtonsByMinItemsForAnswerOptions = (fieldId) => {\n    return new AutoButtonsByMinItemsComponent({\n      wrapperSelector: fieldSelector,\n      listSelector: `#${fieldId} ${answerOptionsWrapperSelector} .questionnaire-question-answer-option:not(.hidden)`,\n      minItems: 2,\n      hideOnMinItemsOrLessSelector: answerOptionRemoveFieldButtonSelector\n    })\n  };\n\n  const createAutoSelectOptionsFromUrl = ($field) => {\n    return new AutoSelectOptionsFromUrl({\n      source: $field.find(displayConditionQuestionSelector),\n      select: $field.find(displayConditionAnswerOptionSelector),\n      sourceToParams: ($element) => { return { id: $element.val() } }\n    })\n  };\n\n  const createSortableList = () => {\n    createSortList(\".questionnaire-questions-list:not(.published)\", {\n      handle: \".question-divider\",\n      placeholder: '<div style=\"border-style: dashed; border-color: #000\"></div>',\n      forcePlaceholderSize: true,\n      onSortUpdate: () => {\n        autoLabelByPosition.run();\n        autoButtonsByPosition.run();\n      }\n    });\n  };\n\n  const createDynamicQuestionTitle = (fieldId) => {\n    const targetSelector = `#${fieldId} .question-title-statement`;\n    const locale = $(targetSelector).data(\"locale\");\n    const maxLength = $(targetSelector).data(\"max-length\");\n    const omission = $(targetSelector).data(\"omission\");\n    const placeholder = $(targetSelector).data(\"placeholder\");\n\n    return createLiveTextUpdateComponent({\n      inputSelector: `#${fieldId} input[name$=\\\\[body_${locale}\\\\]]`,\n      targetSelector: targetSelector,\n      maxLength: maxLength,\n      omission: omission,\n      placeholder: placeholder\n    });\n  }\n\n  const createCollapsibleQuestion = ($target) => {\n    const $collapsible = $target.find(\".collapsible\");\n    if ($collapsible.length > 0) {\n      const collapsibleId = $collapsible.attr(\"id\").replace(\"-question-card\", \"\");\n      const toggleAttr = `${collapsibleId}-question-card button--collapse-question-${collapsibleId} button--expand-question-${collapsibleId}`;\n      $target.find(\".question--collapse\").data(\"toggle\", toggleAttr);\n    }\n  };\n\n  const createDynamicFieldsForAnswerOptions = (fieldId) => {\n    const autoButtons = createAutoButtonsByMinItemsForAnswerOptions(fieldId);\n    const autoSelectOptions = createAutoMaxChoicesByNumberOfAnswerOptions(fieldId);\n\n    return createDynamicFields({\n      placeholderId: \"questionnaire-question-answer-option-id\",\n      wrapperSelector: `#${fieldId} ${answerOptionsWrapperSelector}`,\n      containerSelector: \".questionnaire-question-answer-options-list\",\n      fieldSelector: answerOptionFieldSelector,\n      addFieldButtonSelector: \".add-answer-option\",\n      fieldTemplateSelector: \".decidim-answer-option-template\",\n      removeFieldButtonSelector: answerOptionRemoveFieldButtonSelector,\n      onAddField: () => {\n        autoButtons.run();\n        autoSelectOptions.run();\n      },\n      onRemoveField: () => {\n        autoButtons.run();\n        autoSelectOptions.run();\n      }\n    });\n  };\n\n  const dynamicFieldsForAnswerOptions = {};\n\n  const createDynamicFieldsForMatrixRows = (fieldId) => {\n    return createDynamicFields({\n      placeholderId: \"questionnaire-question-matrix-row-id\",\n      wrapperSelector: `#${fieldId} ${matrixRowsWrapperSelector}`,\n      containerSelector: \".questionnaire-question-matrix-rows-list\",\n      fieldSelector: matrixRowFieldSelector,\n      addFieldButtonSelector: addMatrixRowButtonSelector,\n      fieldTemplateSelector: \".decidim-matrix-row-template\",\n      removeFieldButtonSelector: matrixRowRemoveFieldButtonSelector,\n      onAddField: () => {\n      },\n      onRemoveField: () => {\n      }\n    });\n  };\n\n  const dynamicFieldsForMatrixRows = {};\n\n  const isMultipleChoiceOption = (value) => {\n    return MULTIPLE_CHOICE_VALUES.indexOf(value) >= 0;\n  }\n\n  const isMatrix = (value) => {\n    return MATRIX_VALUES.indexOf(value) >= 0;\n  }\n\n  const getSelectedQuestionType = (select) => {\n    const selectedOption = select.options[select.selectedIndex];\n    return $(selectedOption).data(\"type\");\n  };\n\n  const onDisplayConditionQuestionChange = ($field) => {\n    const $questionSelector = $field.find(displayConditionQuestionSelector);\n    const selectedQuestionType = getSelectedQuestionType($questionSelector[0]);\n\n    const isMultiple = isMultipleChoiceOption(selectedQuestionType);\n\n    let conditionTypes = [\"answered\", \"not_answered\"];\n\n    if (isMultiple) {\n      conditionTypes.push(\"equal\");\n      conditionTypes.push(\"not_equal\");\n    }\n\n    conditionTypes.push(\"match\");\n\n    const $conditionTypeSelect = $field.find(displayConditionTypeSelector);\n\n    $conditionTypeSelect.find(\"option\").each((idx, option) => {\n      const $option = $(option);\n      const value = $option.val();\n\n      if (!value) {\n        return;\n      }\n\n      $option.show();\n\n      if (conditionTypes.indexOf(value) < 0) {\n        $option.hide();\n      }\n    });\n\n    if (conditionTypes.indexOf($conditionTypeSelect.val()) < 0) {\n      $conditionTypeSelect.val(conditionTypes[0]);\n    }\n\n    $conditionTypeSelect.trigger(\"change\");\n  };\n\n  const onDisplayConditionTypeChange = ($field) => {\n    const value = $field.find(displayConditionTypeSelector).val();\n    const $valueWrapper = $field.find(displayConditionValueWrapperSelector);\n    const $answerOptionWrapper = $field.find(displayconditionAnswerOptionWrapperSelector);\n\n    const $questionSelector = $field.find(displayConditionQuestionSelector);\n    const selectedQuestionType = getSelectedQuestionType($questionSelector[0]);\n\n    const isMultiple = isMultipleChoiceOption(selectedQuestionType);\n\n    if (value === \"match\") {\n      $valueWrapper.show();\n    }\n    else {\n      $valueWrapper.hide();\n    }\n\n    if (isMultiple && (value === \"not_equal\" || value === \"equal\")) {\n      $answerOptionWrapper.show();\n    }\n    else {\n      $answerOptionWrapper.hide();\n    }\n  };\n\n  const initializeDisplayConditionField = ($field) => {\n    const autoSelectByUrl = createAutoSelectOptionsFromUrl($field);\n    autoSelectByUrl.run();\n\n    $field.find(displayConditionQuestionSelector).on(\"change\", () => {\n      onDisplayConditionQuestionChange($field);\n    });\n\n    $field.find(displayConditionTypeSelector).on(\"change\", () => {\n      onDisplayConditionTypeChange($field);\n    });\n\n    onDisplayConditionTypeChange($field);\n    onDisplayConditionQuestionChange($field);\n  }\n\n  const createDynamicFieldsForDisplayConditions = (fieldId) => {\n    return createDynamicFields({\n      placeholderId: \"questionnaire-question-display-condition-id\",\n      wrapperSelector: `#${fieldId} ${displayConditionsWrapperSelector}`,\n      containerSelector: \".questionnaire-question-display-conditions-list\",\n      fieldSelector: displayConditionFieldSelector,\n      addFieldButtonSelector: addDisplayConditionButtonSelector,\n      removeFieldButtonSelector: displayConditionRemoveFieldButtonSelector,\n      onAddField: ($field) => {\n        initializeDisplayConditionField($field);\n      },\n      onRemoveField: () => {\n      }\n    });\n  };\n\n  const dynamicFieldsForDisplayConditions = {};\n\n  const setupInitialQuestionAttributes = ($target) => {\n    const fieldId = $target.attr(\"id\");\n    const $fieldQuestionTypeSelect = $target.find(questionTypeSelector);\n\n    createCollapsibleQuestion($target);\n    createDynamicQuestionTitle(fieldId);\n\n    createFieldDependentInputs({\n      controllerField: $fieldQuestionTypeSelect,\n      wrapperSelector: fieldSelector,\n      dependentFieldsSelector: answerOptionsWrapperSelector,\n      dependentInputSelector: `${answerOptionFieldSelector} input`,\n      enablingCondition: ($field) => {\n        return isMultipleChoiceOption($field.val());\n      }\n    });\n\n    createFieldDependentInputs({\n      controllerField: $fieldQuestionTypeSelect,\n      wrapperSelector: fieldSelector,\n      dependentFieldsSelector: maxChoicesWrapperSelector,\n      dependentInputSelector: \"select\",\n      enablingCondition: ($field) => {\n        return $field.val() === \"multiple_option\" || $field.val() === \"matrix_multiple\";\n      }\n    });\n\n    createFieldDependentInputs({\n      controllerField: $fieldQuestionTypeSelect,\n      wrapperSelector: fieldSelector,\n      dependentFieldsSelector: matrixRowsWrapperSelector,\n      dependentInputSelector: `${matrixRowFieldSelector} input`,\n      enablingCondition: ($field) => {\n        return isMatrix($field.val());\n      }\n    });\n\n    dynamicFieldsForAnswerOptions[fieldId] = createDynamicFieldsForAnswerOptions(fieldId);\n    dynamicFieldsForMatrixRows[fieldId] = createDynamicFieldsForMatrixRows(fieldId);\n    dynamicFieldsForDisplayConditions[fieldId] = createDynamicFieldsForDisplayConditions(fieldId);\n\n    const dynamicFieldsAnswerOptions = dynamicFieldsForAnswerOptions[fieldId];\n    const dynamicFieldsMatrixRows = dynamicFieldsForMatrixRows[fieldId];\n\n    const onQuestionTypeChange = () => {\n      if (isMultipleChoiceOption($fieldQuestionTypeSelect.val())) {\n        const nOptions = $fieldQuestionTypeSelect.parents(fieldSelector).find(answerOptionFieldSelector).length;\n\n        if (nOptions === 0) {\n          dynamicFieldsAnswerOptions._addField();\n          dynamicFieldsAnswerOptions._addField();\n        }\n      }\n\n      if (isMatrix($fieldQuestionTypeSelect.val())) {\n        const nRows = $fieldQuestionTypeSelect.parents(fieldSelector).find(matrixRowFieldSelector).length;\n\n        if (nRows === 0) {\n          dynamicFieldsMatrixRows._addField();\n          dynamicFieldsMatrixRows._addField();\n        }\n      }\n    };\n\n    $fieldQuestionTypeSelect.on(\"change\", onQuestionTypeChange);\n\n    onQuestionTypeChange();\n  }\n\n  const hideDeletedQuestion = ($target) => {\n    const inputDeleted = $target.find(\"input[name$=\\\\[deleted\\\\]]\").val();\n\n    if (inputDeleted === \"true\") {\n      $target.addClass(\"hidden\");\n      $target.hide();\n    }\n  }\n\n  createDynamicFields({\n    placeholderId: \"questionnaire-question-id\",\n    wrapperSelector: wrapperSelector,\n    containerSelector: \".questionnaire-questions-list\",\n    fieldSelector: fieldSelector,\n    addFieldButtonSelector: \".add-question\",\n    addSeparatorButtonSelector: \".add-separator\",\n    fieldTemplateSelector: \".decidim-question-template\",\n    separatorTemplateSelector: \".decidim-separator-template\",\n    removeFieldButtonSelector: \".remove-question\",\n    moveUpFieldButtonSelector: \".move-up-question\",\n    moveDownFieldButtonSelector: \".move-down-question\",\n    onAddField: ($field) => {\n      setupInitialQuestionAttributes($field);\n      createSortableList();\n\n      $field.find(\".editor-container\").each((idx, el) => {\n        createQuillEditor(el);\n      });\n\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    },\n    onRemoveField: ($field) => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n\n      $field.find(answerOptionRemoveFieldButtonSelector).each((idx, el) => {\n        dynamicFieldsForAnswerOptions[$field.attr(\"id\")]._removeField(el);\n      });\n\n      $field.find(matrixRowRemoveFieldButtonSelector).each((idx, el) => {\n        dynamicFieldsForMatrixRows[$field.attr(\"id\")]._removeField(el);\n      });\n\n      $field.find(displayConditionRemoveFieldButtonSelector).each((idx, el) => {\n        dynamicFieldsForDisplayConditions[$field.attr(\"id\")]._removeField(el);\n      });\n    },\n    onMoveUpField: () => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    },\n    onMoveDownField: () => {\n      autoLabelByPosition.run();\n      autoButtonsByPosition.run();\n    }\n  });\n\n  createSortableList();\n\n  $(fieldSelector).each((idx, el) => {\n    const $target = $(el);\n\n    hideDeletedQuestion($target);\n    setupInitialQuestionAttributes($target);\n  });\n\n  $(displayConditionFieldSelector).each((idx, el) => {\n    const $field = $(el);\n    initializeDisplayConditionField($field)\n  });\n\n  autoLabelByPosition.run();\n  autoButtonsByPosition.run();\n}\n","(() => {\n  $(\"button.collapse-all\").on(\"click\", () => {\n    $(\".collapsible\").addClass(\"hide\");\n    $(\".question--collapse .icon-expand\").removeClass(\"hide\");\n    $(\".question--collapse .icon-collapse\").addClass(\"hide\");\n  });\n\n  $(\"button.expand-all\").on(\"click\", () => {\n    $(\".collapsible\").removeClass(\"hide\");\n    $(\".question--collapse .icon-expand\").addClass(\"hide\");\n    $(\".question--collapse .icon-collapse\").removeClass(\"hide\");\n  });\n})(window);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t985: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkapp\"] = self[\"webpackChunkapp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [112,335], function() { return __webpack_require__(53232); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","AutoButtonsByMinItemsComponent","options","this","listSelector","minItems","hideOnMinItemsOrLessSelector","run","$list","$","$items","AutoSelectOptionsByTotalItemsComponent","wrapperSelector","selectSelector","$selectField","idx","AutoSelectOptionsFromUrl","$source","$select","sourceToParams","on","_onSourceChange","bind","select","params","url","data","selectedValue","optionElement","option","LiveTextUpdateComponent","inputSelector","targetSelector","maxLength","omission","placeholder","_bindEvent","_run","$input","$target","text","AutoButtonsByPositionComponent","hideOnFirstSelector","hideOnLastSelector","hideOnFirst","hideOnLast","$item","el","AutoLabelByPositionComponent","labelSelector","onPositionComputed","$label","labelContent","SortListComponent","sortable","sortListSelector","$children","event","DynamicFieldsComponent","containerSelector","fieldSelector","addFieldButtonSelector","addSeparatorButtonSelector","fieldTemplateSelector","separatorTemplateSelector","removeFieldButtonSelector","moveUpFieldButtonSelector","moveDownFieldButtonSelector","onAddField","onRemoveField","onMoveUpField","onMoveDownField","placeholderId","elementCounter","_enableInterpolation","_activateFields","_bindEvents","attribute","$subtemplate","$subtemplateParents","$self","$tpl","$subtpl","subtemplateId","subtemplateSelector","cb","console","error","templateClass","$wrapper","$container","templateSelector","$template","$newField","$lastQuestion","$removedField","input","idInput","deletedInput","$movedUpField","$movedDownField","createDynamicFields","FieldDependentInputsComponent","controllerField","dependentFieldsSelector","dependentInputSelector","enablingCondition","$controllerField","$dependentFields","$dependentInputs","createFieldDependentInputs","window","answerOptionFieldSelector","answerOptionsWrapperSelector","answerOptionRemoveFieldButtonSelector","matrixRowFieldSelector","matrixRowsWrapperSelector","matrixRowRemoveFieldButtonSelector","maxChoicesWrapperSelector","displayConditionFieldSelector","displayConditionsWrapperSelector","displayConditionRemoveFieldButtonSelector","displayConditionQuestionSelector","displayConditionTypeSelector","deletedInputSelector","autoButtonsByPosition","autoLabelByPosition","$question","MULTIPLE_CHOICE_VALUES","MATRIX_VALUES","createSortableList","handle","forcePlaceholderSize","onSortUpdate","createDynamicQuestionTitle","fieldId","locale","createDynamicFieldsForAnswerOptions","autoButtons","createAutoButtonsByMinItemsForAnswerOptions","autoSelectOptions","createAutoMaxChoicesByNumberOfAnswerOptions","dynamicFieldsForAnswerOptions","dynamicFieldsForMatrixRows","isMultipleChoiceOption","value","isMatrix","getSelectedQuestionType","selectedOption","onDisplayConditionQuestionChange","$field","$questionSelector","selectedQuestionType","isMultiple","conditionTypes","$conditionTypeSelect","$option","onDisplayConditionTypeChange","$valueWrapper","$answerOptionWrapper","initializeDisplayConditionField","autoSelectByUrl","source","id","$element","createAutoSelectOptionsFromUrl","dynamicFieldsForDisplayConditions","setupInitialQuestionAttributes","$fieldQuestionTypeSelect","$collapsible","collapsibleId","toggleAttr","createCollapsibleQuestion","createDynamicFieldsForMatrixRows","createDynamicFieldsForDisplayConditions","dynamicFieldsAnswerOptions","dynamicFieldsMatrixRows","onQuestionTypeChange","createQuillEditor","hideDeletedQuestion","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","push","__webpack_exports__"],"sourceRoot":""}