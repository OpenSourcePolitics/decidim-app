
var $proposals = $('#proposals');
var $proposalsCount = $('#proposals-count');
var $orderFilterInput = $('.order_filter');
var $map = $('#map-proposals');

$proposals.html('<%= j(render partial: "proposals").strip.html_safe %>');
$proposalsCount.html('<%= j(render partial: "count").strip.html_safe %>');
$orderFilterInput.val('<%= order %>');
$map.html('<%= j(render partial: "map-proposals").strip.html_safe %>');

var $dropdownMenu = $('.dropdown.menu', $proposals);
$dropdownMenu.foundation();

$(() => {
    const map = L.map('map')
    const mapInfos = JSON.parse(document.querySelector('#map').dataset.decidimMap);
    const markers = mapInfos["markers"]

    const layer = L.tileLayer.here(mapInfos.tileLayer)
    layer.addTo(map)

    const markerClusters = new L.MarkerClusterGroup();
    map.addLayer(markerClusters);

    $.template(
      mapInfos.popupTemplateId,
      $(`#${mapInfos.popupTemplateId}`).html()
    );

    const bounds = new L.LatLngBounds(
      markers.map(
        (marker) => [marker.latitude, marker.longitude]
      )
    );

    markers.forEach(function(marker){
        let mark = new L.Marker([marker.latitude, marker.longitude], {
            icon: new L.DivIcon.SVGIcon.DecidimIcon({fillColor: mapInfos.markerColor, iconSize: L.point(28, 36)}),
            keyboard: true,
            title: marker.title
        });
        let node = document.createElement("div");
        $.tmpl(mapInfos.popupTemplateId, marker).appendTo(node);
        mark.bindPopup(node, {
            maxwidth: 640,
            minWidth: 500,
            keepInView: true,
            className: "map-info"
        }).openPopup();
        markerClusters.addLayer(mark)
    });

    const size = map.getSize();
    if (size.y >= 400 && size.x >= 400) {
        map.fitBounds(bounds, { padding: [100, 100] });
    } else if (size.y >= 120 && size.x >= 120) {
        map.fitBounds(bounds, { padding: [30, 30] });
    } else {
        map.fitBounds(bounds);
    }
});




