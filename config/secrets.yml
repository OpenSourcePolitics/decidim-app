# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rails secret` to generate a secure secret key.

# Make sure the secrets in this file are kept private
# if you're sharing your code publicly.

default: &default
  asset_host: <%= ENV["ASSET_HOST"] %>
  decidim:
    admin_password:
      expiration_days: <%= ENV.fetch("DECIDIM_ADMIN_PASSWORD_EXPIRATION_DAYS", 365).to_i %>
      min_length: <%= ENV.fetch("DECIDIM_ADMIN_PASSWORD_MIN_LENGTH", 15).to_i %>
      repetition_times: <%= ENV.fetch("DECIDIM_ADMIN_PASSWORD_REPETITION_TIMES", 5).to_i %>
      strong: <%= ENV.fetch("DECIDIM_ADMIN_PASSWORD_STRONG", "false").to_s %>
    currency: <%= ENV["CURRENCY"] || "â‚¬" %>
    half_signup:
      show_tos_page_after_signup: <%= ENV.fetch("DECIDIM_HALF_SIGNUP_SHOW_TOS_PAGE_AFTER_SIGNUP", "true") == "true" %>
    initiatives:
      creation_enabled: <%= ENV.fetch("INITIATIVES_CREATION_ENABLED", "auto").to_s %>
      similarity_threshold: <%= ENV.fetch("INITIATIVES_SIMILARITY_THRESHOLD", 0.25).to_f %>
      similarity_limit: <%= ENV.fetch("INITIATIVES_SIMILARITY_LIMIT", 5).to_i %>
      minimum_committee_members: <%= ENV.fetch("INITIATIVES_MINIMUM_COMMITTEE_MEMBERS", 2).to_i %>
      default_signature_time_period_length: <%= ENV.fetch("INITIATIVES_DEFAULT_SIGNATURE_TIME_PERIOD_LENGTH", 120).to_i %>
      default_components: <%= ENV.fetch("INITIATIVES_DEFAULT_COMPONENTS", "").split(",").to_json %>
      first_notification_percentage: <%= ENV.fetch("INITIATIVES_FIRST_NOTIFICATION_PERCENTAGE", 33).to_i %>
      second_notification_percentage: <%= ENV.fetch("INITIATIVES_SECOND_NOTIFICATION_PERCENTAGE", 66).to_i %>
      stats_cache_expiration_time: <%= ENV.fetch("INITIATIVES_STATS_CACHE_EXPIRATION_TIME", 5).to_i %>
      max_time_in_validating_state: <%= ENV.fetch("INITIATIVES_MAX_TIME_IN_VALIDATING_STATE", 60).to_i %>
      print_enabled: <%= ENV.fetch("INITIATIVES_PRINT_ENABLED", "auto").to_s %>
      do_not_require_authorization: <%= ENV.fetch("INITIATIVES_DO_NOT_REQUIRE_AUTHORIZATION", "auto").to_s %>
    rack_attack:
      enabled: <%= ENV["ENABLE_RACK_ATTACK"] %>
      fail2ban:
        enabled: <%= ENV["RACK_ATTACK_FAIL2BAN"]&.to_i || 1 %>
      throttle:
        max_requests: <%= ENV["THROTTLING_MAX_REQUESTS"]&.to_i || 100 %>
        period: <%= ENV["THROTTLING_PERIOD"]&.to_i || 60 %>
    sms_gateway: 
      service: <%= ENV.fetch("SMS_GATEWAY_SERVICE", "Decidim::Verifications::Sms::ExampleGateway") %>
      url: <%= ENV["SMS_GATEWAY_URL"] %>
      bulk_url: <%= ENV["SMS_GATEWAY_BULK_URL"] %>
      username: <%= ENV["SMS_GATEWAY_USERNAME"] %>
      password: <%= ENV["SMS_GATEWAY_PASSWORD"] %>
      platform: <%= ENV["SMS_GATEWAY_PLATFORM"] %>
    newsletters_unsubscribe_timeout: <%=  ENV.fetch("NEWSLETTERS_UNSUBSCRIBE_TIMEOUT", 365).to_i %>
  modules:
    gallery:
      enable_animation: <%= ENV.fetch("GALLERY_ANIMATION_ENABLE", "0") == "1" %>
  scaleway:
    id: <%= ENV["SCALEWAY_ID"] %>
    token: <%= ENV["SCALEWAY_TOKEN"] %>
    bucket_name: <%= ENV["SCALEWAY_BUCKET_NAME"] %>
    endpoint: <%= ENV.fetch("OBJECTSTORE_S3_HOST", "s3.fr-par.scw.cloud") %>
  helpscout:
    enabled: <%= !ENV["HELP_SCOUT_BEACON_ID_MAIN"].blank? %>
    main: <%= ENV["HELP_SCOUT_BEACON_ID_MAIN"] %>
    fallback: <%= ENV["HELP_SCOUT_BEACON_ID_FALLBACK"] %>
  omniauth:
    facebook:
      # It must be a boolean. Remember ENV variables doesn't support booleans.
      enabled: false
      app_id: <%= ENV["OMNIAUTH_FACEBOOK_APP_ID"] %>
      app_secret: <%= ENV["OMNIAUTH_FACEBOOK_APP_SECRET"] %>
    twitter:
      enabled: false
      api_key: <%= ENV["OMNIAUTH_TWITTER_API_KEY"] %>
      api_secret: <%= ENV["OMNIAUTH_TWITTER_API_SECRET"] %>
    google_oauth2:
      enabled: false
      client_id: <%= ENV["OMNIAUTH_GOOGLE_CLIENT_ID"] %>
      client_secret: <%= ENV["OMNIAUTH_GOOGLE_CLIENT_SECRET"] %>
    publik:
      enabled: <%= ENV["OMNIAUTH_PUBLIK_CLIENT_SECRET"].present? %>
      client_id: <%= ENV["OMNIAUTH_PUBLIK_CLIENT_ID"] %>
      client_secret: <%= ENV["OMNIAUTH_PUBLIK_CLIENT_SECRET"] %>
      site_url: <%= ENV["OMNIAUTH_PUBLIK_SITE_URL"] %>
    france_connect:
      enabled: <%= ENV["OMNIAUTH_FC_CLIENT_SECRET"].present? %>
      client_id: <%= ENV["OMNIAUTH_FC_CLIENT_ID"] %>
      client_secret: <%= ENV["OMNIAUTH_FC_CLIENT_SECRET"] %>
      site_url: <%= ENV["OMNIAUTH_FC_SITE_URL"] %>
      scope: <%= ENV["OMNIAUTH_FC_SCOPE"] %>
  maps:
    api_key: <%= ENV["GEOCODER_LOOKUP_API_KEY"] %>
  sentry:
    enabled: <%= !ENV["SENTRY_DSN"].blank? %>
    dsn: <%= ENV["SENTRY_DSN"] %>
    js_version: "4.6.4"
  etherpad:
    server: <%= ENV["ETHERPAD_SERVER"] %>
    api_key: <%= ENV["ETHERPAD_API_KEY"] %>
    api_version: "1.2.1"
  translator:
    enabled: <%= ENV.fetch("TRANSLATOR_ENABLED", "0") == "1" %>
    delay: <%= ENV.fetch("TRANSLATOR_DELAY", "0").to_i.seconds %>
    api_key: <%= ENV.fetch("TRANSLATOR_API_KEY", "dummy_key") %>
    host: <%= ENV.fetch("TRANSLATOR_HOST", "https://translator.example.org") %>
  vapid:
    enabled: <%= Decidim::Env.new("VAPID_PUBLIC_KEY").to_boolean_string %>
    public_key: <%= ENV["VAPID_PUBLIC_KEY"] %>
    private_key: <%= ENV["VAPID_PRIVATE_KEY"] %>

development:
  <<: *default
  secret_key_base: d4edb014127adde3c3ebf40661a40d4b4d5a58c5dd7b71ce742ccbd7c60f07b14b4e813076b461a8c22eaf42194b03ceac0e33a9898aa21116b5289753b63916

test:
  <<: *default
  secret_key_base: 0ef0e28c0a56986b464570d6f5bc405ddea78b2c644ebef542326b54f48b572013f64abd1afe3e4f0b85dc03fa58911c3c6d1148f77513230f47df6fea41329c
  omniauth:
    publik:
      enabled: true
      client_id: 12345
      client_secret: 12345
      site_url: https://example.com/
    facebook:
      enabled: true
    twitter:
      enabled: true
    google_oauth2:
      enabled: true

# Do not keep production secrets in the repository,
# instead read values from the environment.
production:
  <<: *default
  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>
  sendgrid: <%= !ENV["SENDGRID_USERNAME"].blank? %>
  smtp_username: <%= ENV["SMTP_USERNAME"] || ENV["SENDGRID_USERNAME"] %>
  smtp_password: <%= ENV["SMTP_PASSWORD"] || ENV["SENDGRID_PASSWORD"] %>
  smtp_address: <%= ENV["SMTP_ADDRESS"] || "smtp.sendgrid.net" %>
  smtp_domain: <%= ENV["SMTP_DOMAIN"] || "heroku.com" %>
  smtp_port: <%= ENV["SMTP_PORT"] || "587" %>
  smtp_starttls_auto: <%= ENV["SMTP_STARTTLS_AUTO"] || true %>
  smtp_authentication: <%= ENV["SMTP_AUTHENTICATION"] || "plain" %>
  aws_access_key_id: <%= ENV["AWS_ACCESS_KEY_ID"] %>
  aws_secret_access_key: <%= ENV["AWS_SECRET_ACCESS_KEY"] %>
